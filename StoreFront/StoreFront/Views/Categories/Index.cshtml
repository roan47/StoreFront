@model IEnumerable<DATA.Models.Category>

@{
    ViewData["Title"] = "Index";
}
 <div class="page-heading about-page-heading" id="top">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="inner-content">
                        <h2>About Our Company</h2>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>


@*
    AJAX - Step 17 - replace create button with ajax toggle create button, and add div for the create partial view
*@

@*<p>
    <a asp-action="Create">Create New</a>
    </p>*@

<div class="row">
    <div class="offset-3 col-md-6" align="center">
        <button id="ToggleCategoryCreate" class="btn btn-primary">Add New Category</button>
    </div>
</div>
<div id="CategoryCreate">
    @*
        This partial will hold the create form, and needs to instantiate a new Category object
        when the form is submitted.  To allow that, we pass the new Category() model to the view.
    *@
    <partial name="CategoryCreate" model="new DATA.Models.Category()" />
</div>


@*
    AJAX - Step 8 create placeholder for status message from AJAX functions
*@
<div class="row">
    <div class="offset-3 col-md-6">
        <div id="MessageContent" class="text-center">
        </div>
    </div>
</div>



@*
    AJAX - Step 3 add ID to the <table>
*@
<table class="table" id="CategoriesTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryDescript)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @*
                AJAX - Step 4 - add an ID the <tr> directly inside the <tbody>
            *@
            <tr id="Category-@item.CategoryId">
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryDescript)
                </td>
                <td>

                    @*
                        AJAX - Step 22 - replace edit link with no-href link
                    *@
                    @*<a asp-action="Edit" asp-route-id="@item.CategoryId">Edit</a> |*@
                    <a href="" class="EditLink" id="@item.CategoryId">Edit</a>

                    @*
                        AJAX - Step 12 - replace details link w/ ajax details button
                    *@
                    @*<a asp-action="Details" asp-route-id="@item.CategoryId">Details</a> |*@
                    <a href="" class="DetailsLink" id="@item.CategoryId">Details</a> |

                    @*
                        AJAX - Step 5 - replace the delete button with AJAX delete
                    *@
                    @*<a asp-action="Delete" asp-route-id="@item.CategoryId">Delete</a>*@
                    <a data-ajax="true" data-ajax-confirm="Are you sure you want to delete @item.CategoryName?"
                   data-ajax-failure="deleteFailed" data-ajax-success="deleteConfirmed" data-ajax-method="POST"
                   href="~/Categories/AjaxDelete/@item.CategoryId">
                        Delete
                    </a>


                </td>
            </tr>
        }
    </tbody>
</table>

@*
    AJAX - Step 13 - create placeholder div for details popup content
*@
<div id="CategoryDetails"></div>


@*
    AJAX - Step 6 add section Scripts
*@
@section Scripts{
<script>
    //*************************** AJAX DELETE *************************/
    //AJAX - Step 7 code the deleteConfirmed() & deleteFailed()
    function deleteConfirmed(response, status, data){
        //remove the row from the table
        let rowId = "#Category-" + response.id;
        console.log(rowId);
        $("#CategoriesTable").find(rowId).remove();

        //display status message
        $("#MessageContent").html("<div class='alert alert-success'>" + response.message + "</div>");
    }

    function deleteFailed(response, status, data){
        //display status message
        $("#MessageContent").html("<div class='alert alert-danger'>Delete unsuccessful.</div>");
    }



    //************************* AJAX DETAILS ************************** */
    //AJAX - Step 14 - show the dialog box when we click the a.DetailsLink
    $("a.DetailsLink").on("click", function(e){
        e.preventDefault();//prevents the <a> from trying to navigate

        //display the dialog box w/ details partial view
        $("#CategoryDetails").data('cId', $(this).attr('id'))
            .dialog({
                width: 400,
                height: 200,
                open: function(){
                    let catId = $(this).data('cId');
                    $(this).load('/Categories/CategoryDetails/' + catId);
                },
                title: "Category Details",
                modal: true,
                resizable: false
            });
    });
    function appendLink(id){
             $("#CategoryDetails").data('cId', id)
            .dialog({
                width: 400,
                height: 200,
                open: function(){
                    let catId = $(this).data('cId');
                    $(this).load('/Categories/CategoryDetails/' + catId);
                },
                title: "Category Details",
                modal: true,
                resizable: false
            });
    }

    //**********************AJAX CREATE *******************************/
    //AJAX - Step 18 - show the create form
    $("#CategoryCreate").hide();//when page loads, the create form is hidden
    $("#ToggleCategoryCreate").on("click", function(){
        $("#CategoryCreate").toggle();
    });

    //AJAX - Step 19 - code ajax create submit function
    //Summary: when the form is submitted, we serialize the data and then send that JSON to the Controller.
    //MessageContent will display any updates for the user
    //jQuery AJAX will:
    //  - call the POST AjaxCreate() from the Categories controller
    //  - pass json data from the form
    //  - on failure, will notify user of error
    //  - on success, will notify user, reset the form, insert the new row into the table on the page
    $("#CategoryCreateForm").on("submit", function(e){
        e.preventDefault();
        let formData = $(this).serializeArray();
        console.log(formData);


        $.ajax({
            url: "/Categories/AjaxCreate",
            type: "POST",
            data: formData,
            dataType: "json",
            error: function(e){
                $("#MessageContent").html("<div class='alert alert-danger'>There was a problem!</div>");
            },
            success: function(category){
                $("#MessageContent").html("<div class='alert alert-success'>Category added!</div>");
                $("#CategoryCreateForm")[0].reset();
                $(function(){
                    let row = '<tr id="Category-' + category.categoryId + '"><td>' + category.categoryName
                    + '</td><td>' + category.categoryDescription
                    + '</td><td><a href="javascript:void(0)" onclick="appendLink(' + category.categoryId
                    + ')" class="DetailsLink" id="' + category.categoryId
                    + '">Details</a></td></tr>';

                    //'<tr><td>' + category.categoryName
                    //+ '</td><td>' + category.categoryDescription
                    //+ '</td></tr>';
                    $("#CategoriesTable").append(row);
                    $("#CategoryCreate").hide();
                });//end function
            }//end success

        });//end .ajax

    });//end submit



    //**************************AJAX EDIT*****************************/
    //AJAX - Step 23 - code the AJAX update
    let originalContent = null;
    $("a.EditLink").on("click", function(e){
        e.preventDefault();
        let categoryId = $(this).attr("id");

        let row = $("#Category-" + categoryId).children();

        originalContent = {
            CatId: categoryId,
            CatName: row[0].innerText,
            CatDescription: row[1].innerText
        };

        //console.log(originalContent);

        $.get("/Categories/CategoryEdit/" + categoryId, function(data){
            $("#Category-" + categoryId).replaceWith("<tr id='Category-" + categoryId + "'>" + data + "</tr>");
        });

    });


        $(document).on("click", "#saveUpdate", function(){
        let formData = $("#CategoryEditForm").serializeArray();
        console.log(formData);
        $("#MessageContent").html("<div class='alert alert-info'>Please wait...</div>");

        $.ajax({
            url: "/Categories/AjaxEdit",
            type: "POST",
            data: formData,
            dataType: "json",
            success: function(data){
                $("#MessageContent").html("<div class='alert alert-success'>Your record was successfully updated!</div>");
                $("#CategoryEditForm")[0].reset();

                $(function(){
                    let row = '<tr><td>' + data.categoryName +
                    '</td><td>' + data.categoryDescription +
                    '</td><td>Refresh to view options</td></tr>';

                    $("#Category-" + data.categoryId).replaceWith(row);
                })
            },
            error: function(e){
                $("#MessageContent").html("<div class='alert alert-warning'>There was an error.  Please try again or contact the site admin.</div>");
                $(function(){
                    let row = '<tr><td>' + originalContent.CatName +
                    '</td><td>' + originalContent.CatDescription +
                    '</td><td>Refresh to view options</td></tr>';
                    $("#Category-" + data.categoryId).replaceWith(row);
                });

            }
        });
    });



</script>
}