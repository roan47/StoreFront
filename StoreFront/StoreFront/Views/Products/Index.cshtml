@model IEnumerable<DATA.Models.Product>

@{
    ViewData["Title"] = "Index";
}
    <div class="page-heading" id="top">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="inner-content">
                        <h2>Check Our Products</h2>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>



<section class="product_section layout_padding">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Skate <span>Shop</span>
            </h2>

            <p align="center">
                @if (User.IsInRole("Admin"))
                {
                    //The pipe delimiters (|) that were outside of the <a> tags were causing intellisense to
                    //assume we were switching BACK to C# mode.
                    //To make sure intellisense renders these as text and NOT c#, we can wrap everything in a <span>
                    <span>
                        <a asp-action="Create">Add New Item</a> |
                        <a asp-action="Discontinued">Discontinued Items</a> |
                    </span>
                }
                <a asp-action="TiledProducts">Tile View</a>
            </p>

        </div>
    


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Pname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pprice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pdescript)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OutStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Img)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Pname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pprice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pdescript)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OutStock)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Img)*@
                <img src="~/assets/images/@item.Img" class="img-fluid" alt="@item.Pdescript" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.Country)
            </td>
            <td>
                 @if (User.IsInRole("Admin"))
                 {
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a>
                 }
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> 
                 @if (User.IsInRole("Admin"))
                 {
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                 }
            </td>
        </tr>
}
            </tbody>
        </table>
       </div>
 </section>

 
@section Scripts
{
    <script>
    $(document).ready( function () {
    $('.table').DataTable();
} );
    </script>
}