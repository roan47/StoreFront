@*@model IEnumerable<DATA.Models.Product>*@
@model IPagedList<DATA.Models.Product>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Shop";
}

 <div class="page-heading" id="top">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="inner-content">
                        <h2></h2>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ***** Main Banner Area End ***** -->


  <section class="section" id="products">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="section-heading">
                        <h2>Shop our handpicked pieces</h2>
                        <span>Check out all of our products.</span>
                          <p align="center">
            @if (User.IsInRole("Admin"))
            {
                <span>
                    <a asp-action="Create">Add New item</a> |
                    
                </span>
            }
            <a asp-action="Index">Table View</a>
        </p>

                   
                </div>
            </div>
        </div>
        
        <div class="row">

           <div class="offset-3 col-sm-6">
                <form asp-action="TiledProducts" method= "get">
                    @*method="get" -> appends the key/value pairs from a form onto the queryt string in our URL
                        ? in the URL indicates the beginning of a query string
                        -everything after the ? is  akey/value pair
                        ?searchTerm=WhateverISearchedFor
                        -multiple key/value pairs are separated with an &
                        ?searchTerm=whatevs&category=tool
                        These keys/value are passed to the action as arguments for the action's parameters.
                         public IActionResult TiledProducts(string searchTerm, string category)
                    *@


                    @*
                        Category DDL - Step 4
                        - add the <select> element

                    *@
                    <label for="categoryId" class="control-label d-block text-center">Filter by Category</label>

                    <select name="categoryId" class="form-control text-center mb-3" asp-items="ViewBag.CategoryId">
                        <option value=0>[Choose a Category]</option>
                    </select>

                    <input name="SearchTerm" class="form-control"/>

                

                  
                      
                                
                    <div class="section-heading">
                  

                    <input type="submit" value="Apply Filters" class="main-text-button  col-sm-6"  />
                    </div>
                      
                </form>

                @if(ViewBag.NbrResults != null)
                {
                    <p class="mt-5 p-2 alert-warning text-center">
                        Showing @ViewBag.NbrResults result@(ViewBag.NbrResults>1 ? "s" : "") for '@ViewBag.SearchTerm'....

                    </p>
                }
            </div>
            </div>

            <div class="container">

            <div class="row">
                 @foreach (var item in Model)
                      {
                <div class="col-lg-4">
                    <div class="item">
                        <div class="thumb">
                            <div class="hover-content">
                                <ul>
                                    <li><a asp-action="Details" asp-route-id="@item.ProductId"><i class="fa fa-eye"></i></a></li>
                                
                                    <li>   <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId"><i class="fa fa-shopping-cart"></i></a></li>
                                </ul>
                            </div>
                            <img src="~/assets/images/@item.Img" alt="@item.Pdescript">
                        </div>
                        <div class="down-content">
                            <h4>  @item.Pname</h4>
                            <span> @Html.DisplayFor(modelItem => item.Pprice)</span>
                           
                        </div>
                    </div>
                </div>
               
                }

              </div>


         <div class="row mt-5">
            <div class="offset-5 col-sm-6">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                @Html.PagedListPager(Model, page => Url.Action("TiledProducts", new {page, searchTerm = ViewBag.SearchTerm, categoryId = ViewBag.Category}))
            </div>
        </div>
    
    </div>
</section>





